
// function factorial(x) {
//     let summ = 1
//     for(let i = 2; i<=x; i++){
//         summ *= i;
//     }
//     return summ
// }
// console.log(factorial(3))

// function pow(num = 2,degree = 3) {
//    if(degree <= 0){
//        return 1
//    }
//    return num *pow(num,degree - 1)

// }
// console.log(pow(2,3))


// Написати розв’язок нижче описаного завдання за допомогою arrow function:
// Створити функцію яка прийматиме одне числове значення.
// Це значення в функції означатиме кількіть елементів послідовності Фібаначі.
// Обрахуйте цю послідовність і виведіть виведіть всі її елементи в консоль.

// Приклад роботи:
// 1. fib(5) – має повернути 1 1 2 3 5.
// 2. fib(10) – має повернути 1 1 2 3 5 8 13 21 34 55.


// let a = 0
// let result = 1
// let fib = number =>{
//     if (number == 1) {
//         console.log(number)
//         return number;
//     } else {
//         let b = fib(number - 1)
//         let c = a + b;
//         a = b;
//         console.log(c)
//         result += c
//         return c;
//     }
// }
// alert(fib(3))
// console.log(` Сума дорівнює ${result}`)

// Написати розв’язок нижче описаного завдання за допомогою function expression:
// Створіть функцію, яка обраховує суму чисел геометричної прогресії, в якій першим числом є 1. Інформація про геометричну прогресію знаходиться тут:

// https://uk.wikipedia.org/wiki/Геометрична _прогресія
// http://ua.onlinemschool.com/math/formula/geometric_sequence/

// Функція приймає два аргументи: кількість чисел прогресії і її знаменник . Наприклад, в прогресії типу 1,2,4,8,16 кількість чисел - 5, а знаменник – 2 (тому що кожне наступне число прогресії домножується на 2). Результат, який має повернути функція для даної прогресії 31.

// Функцію  потрібно написати двома способами:
// З використанням циклу
// З використанням формули знаходження суми геометричної прогресії:
// ,
// де b1 – перший елемент прогресії (в даному завданні це 1),
// q – знаменник,
// n – кількість елементів прогресії

// Приклад роботи:
// f(5,2) – має повернути 1+2+4+8+16=31
// f(4,3) – має повернути 1+3+9+27=40

// let geom = function (number, q) {
//     let summ = 1
//     let b = 1
//     for (i = 1; i < number; i++) {
//         b *= q;
//         // console.log(b)
//         summ += b;
//         console.log(summ)
//     }
//     return summ;
// }
// console.log(geom(5, 2))


// Написати розв’язок нижче описаного завдання за допомогою function expression or arrow:
// Створіть функцію, в яку передається 2 параметри, які користувач вводить через вікно prompt(). 
// Потрібно щоб функція виводила діапазон тільки простих чисел console.log(), між тими які ввів користувач.
// Приклад роботи:
// simpleNumber(10,15) – має повернути 11, 13
// simpleNumber (2,20) – має повернути 2,3,5,7,11,13,17,19
// function number(Number1, Number2) {
//     for (i = Number1; i <= Number2; i++) {
//         let flag=1;
//         for (j = 2; j < i; j++) {
//             if (i % j == 0) {
//              flag=0;
//             }
//         }
//         if(flag==1){
//             console.log(i)
//         }
//     }
// }


// number(3, 40)




